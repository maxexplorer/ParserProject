import time
import requests
from datetime import datetime
from configs.config import CLIENT_ID, API_KEY, API_URLS
from utils import save_csv

headers = {
    'Client-Id': CLIENT_ID,
    'Api-Key': API_KEY,
}


def create_products_report(headers: dict) -> str | None:
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ –ø–æ –≤—Å–µ–º —Ç–æ–≤–∞—Ä–∞–º.

    :param headers: –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å Client-Id –∏ Api-Key
    :return: –°—Ç—Ä–æ–∫–∞ —Å –∫–æ–¥–æ–º –æ—Ç—á—ë—Ç–∞ –∏–ª–∏ None
    """
    data = {
        'language': 'RU',
        'offer_id': [],
        'search': '',
        'sku': [],
        'visibility': 'ALL'
    }

    try:
        response = requests.post(
            API_URLS.get('report_products_create'),
            headers=headers,
            json=data,
            timeout=10)
        response.raise_for_status()
        data = response.json()
        code = data.get('result', {}).get('code')
        return code
    except requests.exceptions.RequestException as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á—ë—Ç–∞: {e}')
    except ValueError:
        print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ JSON-–æ—Ç–≤–µ—Ç–∞.')
    except Exception as e:
        print(f'‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}')

    return None


def get_report_file_link(headers: dict, report_code: str) -> str | None:
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª –æ—Ç—á—ë—Ç–∞ –ø–æ –∫–æ–¥—É.

    :param headers: –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å Client-Id –∏ Api-Key
    :param report_code: –ö–æ–¥ –æ—Ç—á—ë—Ç–∞
    :return: –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª –∏–ª–∏ None
    """
    try:
        response = requests.post(
            API_URLS.get('report_info'),
            headers=headers,
            json={'code': report_code},
            timeout=10)
        response.raise_for_status()
        data = response.json()
        result = data.get('result', {})
        if result.get('status') == 'success':
            return result.get('file')
        else:
            print(f'‚è≥ –°—Ç–∞—Ç—É—Å –æ—Ç—á—ë—Ç–∞: {result.get("status")}')
    except requests.exceptions.RequestException as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç—á—ë—Ç–∞: {e}')
    except ValueError:
        print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ JSON-–æ—Ç–≤–µ—Ç–∞.')

    return None


def run_product_report() -> None:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è:
    - —Å–æ–∑–¥–∞—ë—Ç –æ—Ç—á—ë—Ç
    - –æ–∂–∏–¥–∞–µ—Ç –µ–≥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
    - –ø–æ–ª—É—á–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ CSV
    - —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ñ–∞–π–ª
    """
    print('üì® –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ç—á—ë—Ç –ø–æ —Ç–æ–≤–∞—Ä–∞–º...')
    report_code = create_products_report(headers=headers)
    if not report_code:
        return

    print(f'‚è± –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á—ë—Ç–∞...')
    for attempt in range(10):  # –ü–æ–ø—Ä–æ–±—É–µ–º 10 —Ä–∞–∑
        time.sleep(5)
        file_url = get_report_file_link(headers, report_code)
        if file_url:
            timestamp = datetime.now().strftime('%Y%m%d_%H%M')
            filename = f'results/ozon_products_{timestamp}.csv'
            save_csv(file_url, filename)
            return
        print(f'üîÅ –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/10: –æ—Ç—á—ë—Ç –Ω–µ –≥–æ—Ç–æ–≤.')

    print('‚ùó –û—Ç—á—ë—Ç –Ω–µ –±—ã–ª –≥–æ—Ç–æ–≤ –≤–æ–≤—Ä–µ–º—è.')
