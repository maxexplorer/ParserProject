import os
import time
from datetime import datetime

from requests import Session

import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options as ChromeOptions
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException

# –ù–∞—á–∞–ª–æ –æ—Ç—Å—á—ë—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
start_time: datetime = datetime.now()


def init_undetected_chromedriver(headless_mode: bool = False):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±—Ä–∞—É–∑–µ—Ä Chrome —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º undetected_chromedriver.

    :param headless_mode: –ï—Å–ª–∏ True ‚Äî –±—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
    :return: –æ–±—ä–µ–∫—Ç WebDriver –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—Ä–∞—É–∑–µ—Ä–æ–º.
    """
    options = ChromeOptions()
    if headless_mode:
        options.add_argument('--headless')

    driver = uc.Chrome(options=options)
    driver.implicitly_wait(1)  # –Ω–µ—è–≤–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    driver.maximize_window()  # –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –æ–∫–Ω–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    return driver


def get_product_ids(file_path: str) -> None:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ ID –≤–∞–∫–∞–Ω—Å–∏–π —á–µ—Ä–µ–∑ API –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª.

    :param file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ID –≤–∞–∫–∞–Ω—Å–∏–π.
    """
    with Session() as session:
        vacancy_ids = []

        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
        headers = {
            'Accept': '*/*',
            'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',
            'Connection': 'keep-alive',
            'Referer': 'https://molodaya-arctica.ru/jobs',
            'Sec-Fetch-Dest': 'empty',
            'Sec-Fetch-Mode': 'cors',
            'Sec-Fetch-Site': 'same-origin',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36',
            'X-XSRF-TOKEN': 'eyJpdiI6ImxaSEFYOGI5bGJraGl2M1BqQjRwNkE9PSIsInZhbHVlIjoiVDlIV2MvQjh6cDNRUXlya0hSc1RBcVlZOGpYaFZIZjNzT3FKcXRaeFViekVWTlhHbWNsWFVSNTlYV3lXODMyQzhvazlTYmJZMWtNb3gwaytaMWV6aXdxNnZ1V0o5SGhBV1U1ZFB6cCtJczhKQjZ0WjE4Y3RBY3YxSjBuSUt6TW4iLCJtYWMiOiJhMzg5MjllOWZhNzRiMGE1NGE0M2UxYjlmNzBjMmEwY2M1ODFiNjE1YjcxYzQzNDgxMjk2ZjI5ODc4MjdiNGYyIiwidGFnIjoiIn0=',
            'sec-ch-ua': '"Google Chrome";v="141", "Not?A_Brand";v="8", "Chromium";v="141"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
        }

        first_params = {
            'page': 1,
        }

        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        response = session.get(
            'https://molodaya-arctica.ru/api/vacancies',
            headers=headers,
            params=first_params,
            timeout=(3, 5)
        )

        response.raise_for_status()
        json_data = response.json()

        total = json_data.get('total', 0)
        pages = json_data.get('last_page', 1)

        print(f"–í—Å–µ–≥–æ {total} –≤–∞–∫–∞–Ω—Å–∏–π, {pages} —Å—Ç—Ä–∞–Ω–∏—Ü")

        # –¶–∏–∫–ª –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        for page in range(1, pages + 1):
            params = first_params.copy()
            params['page'] = page

            try:
                time.sleep(1)  # –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                response = session.get(
                    'https://molodaya-arctica.ru/api/vacancies',
                    headers=headers,
                    params=params,
                    timeout=(3, 5)
                )

                if response.status_code != 200:
                    print(f'–°—Ç—Ä–∞–Ω–∏—Ü–∞: {page}: —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ {response.status_code}')
                    continue

                json_data: dict = response.json()
                items: list = json_data.get('resources', [])

            except Exception as ex:
                print(f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}: {ex}")
                continue

            if not items:
                continue

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤–∞–∫–∞–Ω—Å–∏–π
            for item in items:
                vacancy_id = item.get('id')
                vacancy_ids.append(vacancy_id)

            print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {page}/{pages}")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ ID –≤ —Ñ–∞–π–ª
    with open(file_path, 'w', encoding='utf-8') as file:
        print(*vacancy_ids, file=file, sep='\n')


def process_vacancy_ids(driver, file_path: str) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–∏:
    1. –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–∞–∫–∞–Ω—Å–∏–∏
    2. –ö–ª–∏–∫–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è"
    3. –ü–µ—Ä–µ–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É
    4. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–∫—Ä—ã—Ç–∞ –ª–∏ –≤–∞–∫–∞–Ω—Å–∏—è
    5. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID —Å–∫—Ä—ã—Ç—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –≤ result_data.txt
    6. –í—ã–≤–æ–¥–∏—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å i/total –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å–∫—Ä—ã—Ç—ã–º –≤–∞–∫–∞–Ω—Å–∏—è–º

    :param driver: –æ–±—ä–µ–∫—Ç WebDriver
    :param file_path: –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å ID –≤–∞–∫–∞–Ω—Å–∏–π
    """

    exceptions_list = []

    directory: str = 'results'
    os.makedirs(directory, exist_ok=True)
    result_file = os.path.join(directory, 'result_data.txt')

    total_processed = 0
    hidden_count = 0

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π
    with open(file_path, 'r', encoding='utf-8') as file:
        vacancy_ids = [line.strip() for line in file.readlines()]

    total_count = len(vacancy_ids)

    for i, vacancy_id in enumerate(vacancy_ids, start=1):
        total_processed += 1
        print(f"üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ {i}/{total_count}: –í–∞–∫–∞–Ω—Å–∏—è {vacancy_id}")

        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–∞–∫–∞–Ω—Å–∏–∏
            driver.get(url=f"https://molodaya-arctica.ru/jobs/{vacancy_id}")

            # –ñ–¥—ë–º –∫–Ω–æ–ø–∫—É "–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è" –∏ –∫–ª–∏–∫–∞–µ–º –ø–æ –Ω–µ–π
            button = WebDriverWait(driver, 5).until(
                EC.element_to_be_clickable(
                    (By.XPATH, '/html/body/div[1]/div/div/main/div/div[2]/div/div/div/a/span')
                )
            )
            button.click()

            # –ñ–¥—ë–º –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è
            WebDriverWait(driver, 5).until(lambda d: len(d.window_handles) > 1)
            driver.switch_to.window(driver.window_handles[-1])

            # –ñ–¥—ë–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            WebDriverWait(driver, 5).until(
                lambda d: d.execute_script('return document.readyState') == 'complete'
            )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫—Ä—ã—Ç–∞ –ª–∏ –≤–∞–∫–∞–Ω—Å–∏—è
            try:
                title_el = WebDriverWait(driver, 1).until(
                    EC.presence_of_element_located((By.XPATH, "//h1[@class='content__title']"))
                )
                if '–í–∞–∫–∞–Ω—Å–∏—è –±—ã–ª–∞ —Å–∫—Ä—ã—Ç–∞ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∞ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª–µ–º' in title_el.text:
                    hidden_count += 1
                    with open(result_file, 'a', encoding='utf-8') as f:
                        f.write(f"{vacancy_id}\n")
                    print(f'‚úÖ –í–∞–∫–∞–Ω—Å–∏—è {vacancy_id} —Å–∫—Ä—ã—Ç–∞ ‚Äî ID —Å–æ—Ö—Ä–∞–Ω—ë–Ω.')
            except NoSuchElementException:
                pass

        except Exception:
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å —Ü–∏–∫–ª
            exceptions_list.append(vacancy_id)
            continue

        finally:
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É —Å —Ñ–æ—Ä–º–æ–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω—É—é
            if len(driver.window_handles) > 1:
                driver.close()
                driver.switch_to.window(driver.window_handles[0])

    # –í –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    with open(result_file, 'a', encoding='utf-8') as f:
        f.write(f'\n–í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {total_processed}\n')
        f.write(f'–°–∫—Ä—ã—Ç—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π: {hidden_count}\n')

    with open('data/exceptions_list.txt', 'w', encoding='utf-8') as file:
        print(*exceptions_list, file=file, sep='\n')

    print(f"üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: –≤—Å–µ–≥–æ {total_processed}, —Å–∫—Ä—ã—Ç—ã—Ö {hidden_count}")


def main() -> None:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è:
    1. –°–æ–∑–¥–∞—ë—Ç –ø–∞–ø–∫—É data
    2. –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞–∫–∞–Ω—Å–∏–π (–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞)
    3. –ó–∞–ø—É—Å–∫–∞–µ—Ç Chrome —á–µ—Ä–µ–∑ undetected_chromedriver
    4. –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∞–∫–∞–Ω—Å–∏–π
    5. –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä –∏ –≤—ã–≤–æ–¥–∏—Ç –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    """
    directory: str = 'data'
    os.makedirs(directory, exist_ok=True)

    file_name = 'vacancy_ids.txt'
    file_path = os.path.join(directory, file_name)

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–π (–º–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å)
    get_product_ids(file_path=file_path)

    # driver = init_undetected_chromedriver(headless_mode=True)
    # try:
    #     process_vacancy_ids(driver=driver, file_path=file_path)
    # finally:
    #     driver.close()
    #     driver.quit()

    execution_time = datetime.now() - start_time
    print('–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω.')
    print(f'–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {execution_time}')


if __name__ == '__main__':
    main()
